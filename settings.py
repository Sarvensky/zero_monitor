"""–ú–æ–¥—É–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ ZeroTier."""

import os
import json
import time
import sys
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()


def _exit_with_error(message: str):
    """–í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Å–∫—Ä–∏–ø—Ç–∞."""
    print(f"\n–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {message}")
    print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ —Ñ–∞–π–ª–µ .env –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç.")
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—É–∑—É, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ–ª –ø—Ä–æ—á–∏—Ç–∞—Ç—å –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª–∏
    time.sleep(15)
    sys.exit(1)


# --- –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ .env —Ñ–∞–π–ª–∞ ---

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ç–µ–π ZeroTier –∏–∑ JSON-—Å—Ç—Ä–æ–∫–∏
ZEROTIER_NETWORKS_JSON = os.getenv("ZEROTIER_NETWORKS_JSON")
ZEROTIER_NETWORKS = []
if ZEROTIER_NETWORKS_JSON:
    try:
        ZEROTIER_NETWORKS = json.loads(ZEROTIER_NETWORKS_JSON)
        if not isinstance(ZEROTIER_NETWORKS, list):
            raise ValueError("JSON –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ø–∏—Å–∫–æ–º (–º–∞—Å—Å–∏–≤–æ–º).")
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        for network in ZEROTIER_NETWORKS:
            if (
                not isinstance(network, dict)
                or "token" not in network
                or "network_id" not in network
            ):
                raise ValueError(
                    "–ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ª–æ–≤–∞—Ä–µ–º —Å –∫–ª—é—á–∞–º–∏ 'token' –∏ 'network_id'."
                )
    except (json.JSONDecodeError, ValueError) as e:
        _exit_with_error(f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ZEROTIER_NETWORKS_JSON –≤ .env —Ñ–∞–π–ª–µ. {e}")
else:
    _exit_with_error("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ZEROTIER_NETWORKS_JSON –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ .env —Ñ–∞–π–ª–µ.")

# –ó–∞–≥—Ä—É–∑–∫–∞ ID —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ —Å—Ç—Ä–æ–∫–∏, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω–æ–π –∑–∞–ø—è—Ç—ã–º–∏
MEMBER_IDS_CSV = os.getenv("MEMBER_IDS_CSV")
if MEMBER_IDS_CSV:
    MEMBER_IDS = [item.strip() for item in MEMBER_IDS_CSV.split(",")]
else:
    _exit_with_error("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è MEMBER_IDS_CSV –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ .env —Ñ–∞–π–ª–µ.")

# API –∏ Telegram —Ç–æ–∫–µ–Ω—ã
API_URL = "https://api.zerotier.com/api/v1/"
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤, –ø–æ—Ä–æ–≥–æ–≤ –∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ ---
DB_FILE = "monitor_state.db"  # –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite

# –ü–æ—Ä–æ–≥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–Ω–æ–º–∞–ª—å–Ω–æ–≥–æ —Å–∫–∞—á–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ñ–ª–∞–π–Ω–∞ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö).
# –ï—Å–ª–∏ 'lastSeen' –æ—Ç API –±–æ–ª—å—à–µ, —á–µ–º (–ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ + –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ + —ç—Ç–æ—Ç –ø–æ—Ä–æ–≥),
# —Ç–æ —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ –∞–Ω–æ–º–∞–ª–∏–µ–π –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞—Å—á–µ—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
# –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏—è —Ä–µ–¥–∫–∏—Ö –≤—ã–±—Ä–æ—Å–æ–≤ –≤ –æ—Ç–≤–µ—Ç–∞—Ö API ZeroTier.
LAST_SEEN_ANOMALY_THRESHOLD_SECONDS = 200

# –£—Ä–æ–≤–Ω–∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π –æ–± –æ—Ñ–ª–∞–π–Ω–µ.
OFFLINE_THRESHOLDS = {
    "1h": {"seconds": 3600, "message": "üÜò {name}: –æ—Ñ–ª–∞–π–Ω –±–æ–ª–µ–µ 1 —á–∞—Å–∞!", "level": 3},
    "15m": {"seconds": 900, "message": "üö® {name}: –æ—Ñ–ª–∞–π–Ω –±–æ–ª–µ–µ 15 –º–∏–Ω—É—Ç!", "level": 2},
    "5m": {"seconds": 300, "message": "‚ö†Ô∏è {name}: –æ—Ñ–ª–∞–π–Ω –±–æ–ª–µ–µ 5 –º–∏–Ω—É—Ç.", "level": 1},
}

# –ü–æ—Ä–æ–≥, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ–Ω–ª–∞–π–Ω (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
if "5m" not in OFFLINE_THRESHOLDS:
    _exit_with_error("–í OFFLINE_THRESHOLDS –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∫–ª—é—á '5m'.")
ONLINE_THRESHOLD_SECONDS = OFFLINE_THRESHOLDS["5m"]["seconds"]

# –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏
try:
    CHECK_INTERVAL_SECONDS = int(os.getenv("CHECK_INTERVAL_SECONDS", "300"))
    if CHECK_INTERVAL_SECONDS <= 0:
        print(
            "–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 300 —Å–µ–∫—É–Ω–¥."
        )
        CHECK_INTERVAL_SECONDS = 300
except (ValueError, TypeError):
    print(
        "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç CHECK_INTERVAL_SECONDS –≤ .env. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 300 —Å–µ–∫—É–Ω–¥."
    )
    CHECK_INTERVAL_SECONDS = 300

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API ---
API_RETRY_ATTEMPTS = 3
API_RETRY_DELAY_SECONDS = 5
