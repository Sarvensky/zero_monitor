"""–ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –æ—Ç—á–µ—Ç–æ–≤ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ ZeroTier –≤ Telegram."""

from datetime import date
import time
import requests
import settings


def send_telegram_alert(message: str) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏ –≤ —Å–ª—É—á–∞–µ —Å–±–æ—è."""
    if not settings.BOT_TOKEN or not settings.CHAT_ID:
        print("–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram –ø—Ä–æ–ø—É—â–µ–Ω–∞: BOT_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.")
        return

    url = f"https://api.telegram.org/bot{settings.BOT_TOKEN}/sendMessage"
    payload = {"chat_id": settings.CHAT_ID, "text": message}

    for attempt in range(settings.API_RETRY_ATTEMPTS):
        try:
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è "–∑–∞–≤–∏—Å–∞–Ω–∏—è" —Å–∫—Ä–∏–ø—Ç–∞
            response = requests.post(url, json=payload, timeout=10)
            response.raise_for_status()
            print("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
            return  # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
        except requests.exceptions.RequestException as e:
            print(
                f"–ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{settings.API_RETRY_ATTEMPTS}: "
                f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram: {e}"
            )
            if attempt < settings.API_RETRY_ATTEMPTS - 1:
                print(
                    f"–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ {settings.API_RETRY_DELAY_SECONDS} —Å–µ–∫..."
                )
                time.sleep(settings.API_RETRY_DELAY_SECONDS)
            else:
                print("–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏—Å—á–µ—Ä–ø–∞–Ω—ã.")


def report_findings(problem_reports: list[str], stats: dict):
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å,
    –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.
    """
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ–±–ª–µ–º –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤
    stats["problems_today"] += len(problem_reports)

    print("\n--- –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã ---")
    alert_message = "üîé –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ ZeroTier:\n\n" + "\n".join(
        problem_reports
    )
    print(alert_message)

    print("\n–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram...")
    send_telegram_alert(alert_message)


def send_daily_report(stats: dict, problematic_members: list):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Ä–∞–±–æ—Ç–µ —Å–∫—Ä–∏–ø—Ç–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ."""
    report_date = stats.get("last_report_date", str(date.today()))
    last_check = stats.get("last_check_datetime", "–Ω/–¥")
    message = (
        f"üåô –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –∑–∞ {report_date}:\n\n"
        f"‚úÖ –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ ZeroTier —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ.\n"
        f"üìà –ü—Ä–æ–≤–µ—Ä–æ–∫ –∑–∞ –¥–µ–Ω—å: {stats.get('checks_today', 0)}\n"
        f"‚ö†Ô∏è –í—ã—è–≤–ª–µ–Ω–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤: {stats.get('problems_today', 0)}\n"
        f"üïí –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: {last_check}"
    )

    if problematic_members:
        problem_details = "\n\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É–∑–ª–∞–º —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏:"
        for member in problematic_members:
            problem_details += (
                f"\n  - {member['name']}: {member['problems_count']} –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤"
            )
        message += problem_details

    print("\n--- –û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ ---")
    print(message)
    send_telegram_alert(message)


def send_startup_notification():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ —Å–∫—Ä–∏–ø—Ç–∞."""
    message = (
        f"üöÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ ZeroTier (–≤–µ—Ä—Å–∏—è: {settings.PROJECT_VERSION}) —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω."
    )
    print("\n" + message)
    send_telegram_alert(message)
