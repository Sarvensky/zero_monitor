"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫ –∏ –∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤.
"""

# –°–ª–æ–≤–∞—Ä—å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —è–∑—ã–∫–æ–≤.
# –ö–ª—é—á–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è - —ç—Ç–æ –∫–æ–¥—ã —è–∑—ã–∫–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'ru', 'en').
# –í–ª–æ–∂–µ–Ω–Ω—ã–µ –∫–ª—é—á–∏ - —ç—Ç–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —Å—Ç—Ä–æ–∫, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –≤ –∫–æ–¥–µ.
STRINGS = {
    "ru": {
        # –û–±—â–∏–µ
        "critical_error": "–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {message}",
        "fix_env_and_restart": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ —Ñ–∞–π–ª–µ .env –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç.",
        "attempt_info": "–ü–æ–ø—ã—Ç–∫–∞ {attempt}/{total}:",
        "retry_in_seconds": "–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ {delay} —Å–µ–∫...",
        "all_attempts_failed_with_error": "–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã. –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {error}",
        "all_attempts_failed": "–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã.",
        # settings.py
        "json_must_be_list": "JSON –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ø–∏—Å–∫–æ–º (–º–∞—Å—Å–∏–≤–æ–º).",
        "json_must_be_dict": "–ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ª–æ–≤–∞—Ä–µ–º —Å –∫–ª—é—á–∞–º–∏ 'token' –∏ 'network_id'.",
        "invalid_json_format": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ZEROTIER_NETWORKS_JSON –≤ .env —Ñ–∞–π–ª–µ. {e}",
        "zt_networks_json_not_found": "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ZEROTIER_NETWORKS_JSON –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ .env —Ñ–∞–π–ª–µ.",
        "member_ids_csv_not_found": "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è MEMBER_IDS_CSV –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ .env —Ñ–∞–π–ª–µ.",
        "offline_threshold_5m_missing": "–í OFFLINE_THRESHOLDS –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∫–ª—é—á '5m'.",
        "interval_must_be_positive": (
            "–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º. "
            "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 300 —Å–µ–∫—É–Ω–¥."
        ),
        "invalid_interval_format": (
            "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç CHECK_INTERVAL_SECONDS –≤ .env. "
            "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 300 —Å–µ–∫—É–Ω–¥."
        ),
        # api_client.py
        "getting_members_info": "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–ª–µ–Ω–∞—Ö —Å–µ—Ç–∏ ZeroTier...",
        "error_getting_members": "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ç–∏ {net_id}: {e}",
        "failed_to_get_members_for_network": "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —Å–µ—Ç–∏ {net_id}",
        "alert_failed_to_get_members": (
            "‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ç–∏ {net_id} –ø–æ—Å–ª–µ {attempts} –ø–æ–ø—ã—Ç–æ–∫. "
            "–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {error}"
        ),
        "error_getting_latest_version": "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ ZeroTier: {e}",
        "alert_failed_to_get_latest_version": (
            "‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é ZeroTier –ø–æ—Å–ª–µ {attempts} –ø–æ–ø—ã—Ç–æ–∫. "
            "–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {error}"
        ),
        "using_fallback_version": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–µ—Ä—Å–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {version}",
        "using_db_version": "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–µ—Ä—Å–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {version}",
        "zt_version_db_updated": "–í–µ—Ä—Å–∏—è ZeroTier –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {version}",
        # checker.py
        "ping_command_not_found": "–û–®–ò–ë–ö–ê: –ö–æ–º–∞–Ω–¥–∞ 'ping' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ö–æ—Å—Ç {ip}.",
        "version_report_old": "üîß {name}: —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è ({version})",
        "version_report_updated": "‚úÖ {name}: –≤–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π ({version})",
        "member_never_online": "‚ùì {name}: –Ω–∏ —Ä–∞–∑—É –Ω–µ –±—ã–ª –≤ —Å–µ—Ç–∏.",
        "anomaly_detected": (
            "–ê–ù–ê–õ–ò–ó: –û–±–Ω–∞—Ä—É–∂–µ–Ω –∞–Ω–æ–º–∞–ª—å–Ω—ã–π —Å–∫–∞—á–æ–∫ 'lastSeen' –¥–ª—è {name}. "
            "API: {api_s} —Å–µ–∫, –ü—Ä–µ–¥—ã–¥—É—â–µ–µ: {prev_s} —Å–µ–∫. "
            "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–∞—Å—á–µ—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {calc_s} —Å–µ–∫."
        ),
        "last_seen_calculated": "~{seconds} —Å–µ–∫. –Ω–∞–∑–∞–¥ (—Ä–∞—Å—á–µ—Ç–Ω–æ–µ)",
        "last_seen_normal": "{seconds} —Å–µ–∫. –Ω–∞–∑–∞–¥",
        "device_back_online": "‚úÖ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ {name} —Å–Ω–æ–≤–∞ –≤ —Å–µ—Ç–∏.",
        "member_back_online_report": "‚úÖ {name}: —Å–Ω–æ–≤–∞ –≤ —Å–µ—Ç–∏.",
        "checking_ping_for_offline_node": "–ê–ù–ê–õ–ò–ó: –£–∑–µ–ª {name} –æ—Ñ–ª–∞–π–Ω. –ü—Ä–æ–≤–µ—Ä—è—é –ø–∏–Ω–≥ –¥–æ {ip}...",
        "ping_success_report": "\n  (üí° –ü–∏–Ω–≥ –¥–æ {ip} –ø—Ä–æ—Ö–æ–¥–∏—Ç. –í–æ–∑–º–æ–∂–µ–Ω —Å–±–æ–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞.)",
        "ping_fail_report": "\n  (‚ùóÔ∏è –ü–∏–Ω–≥ –¥–æ {ip} –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç. –£–∑–µ–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.)",
        "no_ip_for_ping": "–ê–ù–ê–õ–ò–ó: –£ —É–∑–ª–∞ {name} –Ω–µ—Ç IP-–∞–¥—Ä–µ—Å–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∏–Ω–≥–∞.",
        "check_result_log": "ID: {id}, –ò–º—è: {name}, –í–µ—Ä—Å–∏—è: {version} [{status}], –û–Ω–ª–∞–π–Ω: {online_str}",
        "offline_level1_message": "‚ö†Ô∏è {name}: –æ—Ñ–ª–∞–π–Ω –±–æ–ª–µ–µ 5 –º–∏–Ω—É—Ç.",
        "offline_level2_message": "üö® {name}: –æ—Ñ–ª–∞–π–Ω –±–æ–ª–µ–µ 15 –º–∏–Ω—É—Ç!",
        "offline_level3_message": "üÜò {name}: –æ—Ñ–ª–∞–π–Ω –±–æ–ª–µ–µ 1 —á–∞—Å–∞!",
        # database_manager.py
        "column_added_to_table": "–°—Ç–æ–ª–±–µ—Ü '{column}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü—É '{table}'.",
        "db_initialized": "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è 'lastSeen' —Å–±—Ä–æ—à–µ–Ω—ã.",
        "daily_counters_reset": "–°—á–µ—Ç—á–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º –¥–ª—è –≤—Å–µ—Ö —É–∑–ª–æ–≤ —Å–±—Ä–æ—à–µ–Ω—ã.",
        # send_to_chat.py
        "telegram_sending_skipped": "–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram –ø—Ä–æ–ø—É—â–µ–Ω–∞: BOT_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.",
        "telegram_notification_sent": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.",
        "telegram_sending_error": "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram: {e}",
        "problems_detected_header": "--- –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã ---",
        "problems_report_header": "üîé –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ ZeroTier:\n\n",
        "sending_telegram_notification": "–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram...",
        "daily_report_title": "üåô –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –∑–∞ {date}:\n\n",
        "daily_report_status_ok": "‚úÖ –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ ZeroTier —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ.\n",
        "daily_report_checks": "üìà –ü—Ä–æ–≤–µ—Ä–æ–∫ –∑–∞ –¥–µ–Ω—å: {checks}\n",
        "daily_report_incidents": "‚ö†Ô∏è –í—ã—è–≤–ª–µ–Ω–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤: {problems}\n",
        "daily_report_last_check": "üïí –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: {last_check}",
        "daily_report_problematic_members_header": "\n\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É–∑–ª–∞–º —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏:",
        "daily_report_problematic_member_line": "\n  - {name}: {count} –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤",
        "sending_daily_report": "--- –û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ ---",
        "startup_notification": "üöÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ ZeroTier (v{version}) —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.",
        "stop_notification": "üöß –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ ZeroTier –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
        # main.py
        "current_datetime": "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å–µ–π—á–∞—Å: {check_time_str}",
        "latest_zt_version": "–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è ZeroTier: {latest_version}",
        "get_members_failed_skipping": "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö —Å–µ—Ç–∏. –ü—Ä–æ–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏.",
        "check_results_header": "--- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ ---",
        "no_new_problems": "–ù–æ–≤—ã—Ö –ø—Ä–æ–±–ª–µ–º –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.",
        "invalid_report_date_in_db": "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ –ë–î. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞.",
        "new_day_started": "--- –ù–∞—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –¥–µ–Ω—å ({current_date}). –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –∑–∞ {last_report_date}. ---",
        "unexpected_error": "--- –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e} ---",
        "pause_before_next_check": "--- –ü–∞—É–∑–∞ {minutes} –º–∏–Ω—É—Ç –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ ---",
        "script_stopped_by_user": "\n–°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.",
    },
    "en": {
        # Common
        "critical_error": "CRITICAL ERROR: {message}",
        "fix_env_and_restart": "Please fix the configuration in the .env file and restart the script.",
        "attempt_info": "Attempt {attempt}/{total}:",
        "retry_in_seconds": "Retrying in {delay} sec...",
        "all_attempts_failed_with_error": "All attempts have been exhausted. Last error: {error}",
        "all_attempts_failed": "All attempts have been exhausted.",
        # settings.py
        "json_must_be_list": "JSON must be a list (array).",
        "json_must_be_dict": "Each list item must be a dictionary with 'token' and 'network_id' keys.",
        "invalid_json_format": "Invalid ZEROTIER_NETWORKS_JSON format in .env file. {e}",
        "zt_networks_json_not_found": "ZEROTIER_NETWORKS_JSON variable not found in .env file.",
        "member_ids_csv_not_found": "MEMBER_IDS_CSV variable not found in .env file.",
        "offline_threshold_5m_missing": "OFFLINE_THRESHOLDS is missing the required '5m' key.",
        "interval_must_be_positive": (
            "Check interval must be a positive number. "
            "Using default value: 300 seconds."
        ),
        "invalid_interval_format": (
            "Invalid CHECK_INTERVAL_SECONDS format in .env. "
            "Using default value: 300 seconds."
        ),
        # api_client.py
        "getting_members_info": "Getting information about ZeroTier network members...",
        "error_getting_members": "Error getting members for network {net_id}: {e}",
        "failed_to_get_members_for_network": "Failed to get members for network {net_id}",
        "alert_failed_to_get_members": (
            "‚õî Failed to get members for network {net_id} after {attempts} attempts. "
            "Last error: {error}"
        ),
        "error_getting_latest_version": "Error getting the latest ZeroTier version: {e}",
        "alert_failed_to_get_latest_version": (
            "‚õî Failed to get the latest ZeroTier version after {attempts} attempts. "
            "Last error: {error}"
        ),
        "using_fallback_version": "Using fallback version: {version}",
        "using_db_version": "Using version from database: {version}",
        "zt_version_db_updated": "ZeroTier version in database updated to {version}",
        # checker.py
        "ping_command_not_found": "ERROR: 'ping' command not found. Cannot check host {ip}.",
        "version_report_old": "üîß {name}: outdated version ({version})",
        "version_report_updated": "‚úÖ {name}: version updated to the latest ({version})",
        "member_never_online": "‚ùì {name}: has never been online.",
        "anomaly_detected": (
            "ANALYSIS: Anomalous 'lastSeen' jump detected for {name}. "
            "API: {api_s}s, Previous: {prev_s}s. Using calculated value: {calc_s}s."
        ),
        "last_seen_calculated": "~{seconds}s ago (calculated)",
        "last_seen_normal": "{seconds}s ago",
        "device_back_online": "‚úÖ Device {name} is back online.",
        "member_back_online_report": "‚úÖ {name}: is back online.",
        "checking_ping_for_offline_node": "ANALYSIS: Node {name} is offline. Checking ping to {ip}...",
        "ping_success_report": "\n  (üí° Ping to {ip} is successful. Controller might be down.)",
        "ping_fail_report": "\n  (‚ùóÔ∏è Ping to {ip} is failing. Node is unreachable.)",
        "no_ip_for_ping": "ANALYSIS: Node {name} has no IP address for ping check.",
        "check_result_log": "ID: {id}, Name: {name}, Version: {version} [{status}], Online: {online_str}",
        "offline_level1_message": "‚ö†Ô∏è {name}: offline for more than 5 minutes.",
        "offline_level2_message": "üö® {name}: offline for more than 15 minutes!",
        "offline_level3_message": "üÜò {name}: offline for more than 1 hour!",
        # database_manager.py
        "column_added_to_table": "Column '{column}' added to table '{table}'.",
        "db_initialized": "Database initialized, saved 'lastSeen' states have been reset.",
        "daily_counters_reset": "Daily problem counters for all nodes have been reset.",
        # send_to_chat.py
        "telegram_sending_skipped": "Telegram sending skipped: BOT_TOKEN or CHAT_ID is not configured.",
        "telegram_notification_sent": "Notification sent successfully.",
        "telegram_sending_error": "Error sending notification to Telegram: {e}",
        "problems_detected_header": "--- Problems Detected ---",
        "problems_report_header": "üîé Problems detected with ZeroTier clients:\n\n",
        "sending_telegram_notification": "Sending notification to Telegram...",
        "daily_report_title": "üåô Daily report for {date}:\n\n",
        "daily_report_status_ok": "‚úÖ ZeroTier monitoring script is running normally.\n",
        "daily_report_checks": "üìà Checks today: {checks}\n",
        "daily_report_incidents": "‚ö†Ô∏è Incidents detected: {problems}\n",
        "daily_report_last_check": "üïí Last check: {last_check}",
        "daily_report_problematic_members_header": "\n\nüìä Statistics for nodes with problems:",
        "daily_report_problematic_member_line": "\n  - {name}: {count} incidents",
        "sending_daily_report": "--- Sending daily report ---",
        "startup_notification": "üöÄ ZeroTier Monitor (v{version}) started successfully.",
        "stop_notification": "üöß *ZeroTier Monitor stopped*",
        # main.py
        "current_datetime": "Current date and time: {check_time_str}",
        "latest_zt_version": "Latest ZeroTier version: {latest_version}",
        "get_members_failed_skipping": "Failed to get network member information. Skipping check.",
        "check_results_header": "--- Check Results ---",
        "no_new_problems": "No new problems or status changes detected.",
        "invalid_report_date_in_db": "Invalid last report date in DB. Using current date.",
        "new_day_started": "--- New day has started ({current_date}). Sending report for {last_report_date}. ---",
        "unexpected_error": "--- An unexpected error occurred: {e} ---",
        "pause_before_next_check": "--- Pausing for {minutes} minutes until the next check ---",
        "script_stopped_by_user": "\nScript stopped by user.",
    },
}


class Translator:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏.
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —è–∑—ã–∫–∞ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥ `t` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–æ–∫.
    """

    def __init__(self, language: str):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫.
        Args:
            language: –ö–æ–¥ —è–∑—ã–∫–∞ ('ru', 'en', –∏ —Ç.–¥.).
        """
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —è–∑—ã–∫, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'ru', –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π —è–∑—ã–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω
        if language.lower() in STRINGS:
            self.lang = language.lower()
        else:
            # –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —è–∑—ã–∫ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –æ–±–æ–∏—Ö —è–∑—ã–∫–∞—Ö
            # –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø–æ–Ω—è—Ç–Ω–æ—Å—Ç–∏.
            print(
                f"Unsupported language '{language}'. Using 'ru'. / –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —è–∑—ã–∫ '{language}'. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 'ru'."
            )
            self.lang = "ru"

    def t(self, key: str, **kwargs) -> str:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –ø–æ –∫–ª—é—á—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞.
        –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

        Args:
            key: –ö–ª—é—á —Å—Ç—Ä–æ–∫–∏ –≤ —Å–ª–æ–≤–∞—Ä–µ STRINGS.
            **kwargs: –ê—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏.

        Returns:
            –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω–∞—è –∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.
            –ï—Å–ª–∏ –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∞–º –∫–ª—é—á.
        """
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ —Å–ª–æ–≤–∞—Ä—è, –µ—Å–ª–∏ –∫–ª—é—á–∞ –Ω–µ—Ç - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–∞–º –∫–ª—é—á
        string_template = STRINGS.get(self.lang, {}).get(key, key)
        # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –±—ã–ª–∞ —Ä–∞–∑–±–∏—Ç–∞ –Ω–∞ —á–∞—Å—Ç–∏, "—Å–∫–ª–µ–∏–≤–∞–µ–º" –µ–µ
        if isinstance(string_template, tuple):
            string_template = "".join(string_template)

        if kwargs:
            return string_template.format(**kwargs)
        return string_template
